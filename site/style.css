:root {
  --font-family-mono: ui-monospace, 'Cascadia Code', 'Source Code Pro', Menlo, Consolas, 'DejaVu Sans Mono', monospace;
  --font-family-sans: Seravek, 'Gill Sans Nova', Ubuntu, Calibri, 'DejaVu Sans', source-sans-pro, sans-serif;
}

body {
  font-family: var(--font-family-sans);

  display: grid;
  grid-template-columns: 1fr minmax(auto, 40rem) minmax(10rem, 1fr);
  grid-template-rows: 1fr;
  grid-template-areas: "controls puzzle details";

  align-items: stretch;
}

kbd {
  font-weight: 500;
  color: #666;
  font-family: var(--font-family-mono);
}

.controls-panel {
  grid-area: controls;
}

main {
  grid-area: puzzle;
}

.details-panel {
  grid-area: details;
}

.controls-panel,
.controls-panel>details,
.details-panel,
.quote-author {
  background: white;
}

@media (width >=1000px) {

  .controls-panel,
  .controls-panel>details,
  .details-panel,
  .quote-author {
    z-index: 100;
    position: sticky;
    top: 0px;
  }
}


.quote-author__name {
  font-weight: 600;
}

@media (width < 1000px) {
  body {
    grid-template-columns: 1fr;
    grid-template-rows: auto auto auto;
    grid-template-areas:
      "controls"
      "details"
      "puzzle";
    align-items: start;
  }
}

.controls-panel>details>summary {
  padding: 0.25rem;
  font-size: 1.5rem;
  cursor: pointer;
}

.details-panel {
  display: flex;
  flex-direction: column;
  align-content: end;
  flex-wrap: wrap;
}

.quote-author {
  display: flex;
  gap: 1rem;
  padding-block: 0.5rem;
  padding-inline: 1rem;
  line-height: 1.1;
}

.how-to-play__body {
  max-width: 30rem;
  padding-inline: 2rem;

  @media (width <1500px) {
    padding-inline: 0.5rem;
  }

  p {
    margin-bottom: 1lh;
  }
}

@media (width >=1000px) {
  .select-quote {
    margin-top: 6rem;
  }

  .controls-panel {
    justify-self: center;

    >details {
      >summary {
        font-size: 2rem;
        text-align: center;
      }

    }
  }

  .details-panel {
    justify-self: center;
  }

  .quote-author {
    border-left: 1px solid #eee;
    margin-top: 8rem;
    top: 2rem;
    padding-bottom: 2rem;
    padding-left: 0.5rem;
  }
}

main {
  padding: 1rem;
}

h1 {
  font-size: 3rem;
  margin-top: 2rem;
  margin-bottom: 2rem;
  text-align: center;
  color: #ccc;

  @media (width <1000px) {
    display: none;
  }
}

.puzzle-choice-list {
  padding-left: 0.5rem;

  @media (width <1000px) {
    display: flex;
    gap: 1px;
    flex-direction: row;
    flex-wrap: wrap;
  }

  >li {
    list-style: none;

    a {
      position: relative;
      cursor: pointer;
      display: block;
      padding: 0 0.25rem;

      border-bottom: 2px solid;

      border-color: #bdc0d8;
      color: #202f8b;
      padding-top: 0.25rem;
      text-decoration: none;

      @media (width <1000px) {
        border: 1px solid;
      }

      &:target {
        border-left-style: solid;
        border-left-width: 4px;
      }


      &:hover {
        border-color: #619cf3;
        color: #2d5a79;
        background: #f5f8fc;
      }

      &.puzzle-link-solved {
        border-color: #39aa1d;
        color: #0c1f07;
        background: #e9f08c;

        &::after {
          display: block;
          right: 0;
          top: 0;
          float: right;
          content: "âœ…";
          position: absolute;
          opacity: 0.33;
        }

        &:hover {
          background: #b1f336;
        }
      }
    }
  }
}

/* Main puzzle styles */

.cryptogram-words {
  font-family: var(--font-family-mono);
  font-size: 2rem;

  display: flex;
  flex-wrap: wrap;

  gap: 0.66ch calc(1ch + 4px);

  @media (width < 640px) {
    font-size: 1.5rem;
  }
}

.word {
  display: flex;

  /*
  Avoid overflow when the viewport is *really* small.
  This doesn't cause wrapping if there's still space for the parent
  flexbox (.cryptogram-words) to wrap.
  */
  flex-wrap: wrap;

  align-items: center;

}

.char {
  position: relative;

  width: calc(1ch + 6px);
  padding-inline: 3px;
  padding-block: 2px;
  line-height: 85%;
  text-transform: uppercase;

  border: none;
  user-select: none;
  -webkit-user-select: none;
  cursor: default;
  caret-color: transparent;

  transition:
    filter 0.1s,
    background 0.2s,
    color 0.2s;

  &:where(:not(.char-hint)) {
    background: #f0f0f0;
  }

  &.char-filled {
    background: rgb(103, 108, 148);
    color: white;
  }

  &::selection {
    background: transparent;
  }

  &::placeholder {
    color: #bfbfbf;
  }

  &:focus {
    outline: 2px solid black;
  }

  &:hover {
    filter: brightness(0.85);
  }
}

.char.char-wrong {
  background: rgb(185, 34, 29);
  z-index: 3;

  &:focus {
    outline: 2px solid rgb(59, 0, 0);
  }
}

.char.char:focus {
  z-index: 4;
}

.status {
  display: none;

  padding: 0.5rem;
  margin: 0.5rem;
  margin-bottom: 1rem;
  border: 1px solid #ccc;
  font-size: 1.5rem;

  &.status__show {
    display: block;
  }
}
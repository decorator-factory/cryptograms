:root {
  --large-button-size: 96px;

  --font-family-mono: ui-monospace, 'Cascadia Code', 'Source Code Pro', Menlo, Consolas, 'DejaVu Sans Mono', monospace;
  --font-family-sans: Seravek, 'Gill Sans Nova', Ubuntu, Calibri, 'DejaVu Sans', source-sans-pro, sans-serif;
}

body {
  font-family: var(--font-family-sans);

  display: grid;
  grid-template-columns: 1fr minmax(auto, 45rem) minmax(10rem, 1fr);
  grid-template-rows: 1fr;
  grid-template-areas: "controls puzzle details";

  align-items: stretch;

  /*
  This is very important and different from height: 100%;
  If height is 100%, then elements iwth "position: sticky" will
  un-stick once you scroll past one screen's worth of vertical space.
  */
  height: auto;
}

.controls-panel {
  grid-area: controls;
  background: white;
}

main {
  grid-area: puzzle;
}

.details-panel {
  grid-area: details;
  background: white;
}

.controls-panel,
.details-panel,
nav,
.quote-author {
  z-index: 100;
  position: sticky;
  top: 0px;
}

.btn-hamburger {
  color: #aaa;
  font-size: var(--large-button-size);
  font-weight: 900;
  background: none;
  border: none;
}

.quote-author__name {
  font-weight: 600;
}

@media (width < 768px) {
  :root {
    --large-button-size: 48px;
  }

  body {
    grid-template-columns: 3rem auto;
    grid-template-rows: min-content auto;
    grid-template-areas:
      "controls details"
      "puzzle puzzle";
  }

  .details-panel {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-content: end;
    flex-wrap: wrap;
  }

  .quote-author {
    display: flex;
    gap: 1rem;
    padding-right: 3rem;
  }
}

@media (width >=768px) {
  .controls-panel {
    position: relative;
    justify-self: right;
    margin-top: 6rem;
    top: 2rem;

    button {
      margin-left: auto;

      /* Scale from 120px to 0px as the viewport width shrinks from 1200px to 900px */
      margin-right: calc(max(0px, min((100vw - 800px) * (120 / (1200 - 800)), 120px)));
    }
  }

  .details-panel {
    justify-self: center;
  }

  .quote-author {
    border-left: 1px solid #eee;
    margin-top: 8rem;
    top: 2rem;
    padding-bottom: 2rem;
    padding-left: 0.5rem;
  }
}

main {
  padding: 1rem;
}

h1 {
  font-size: 3rem;
  margin-top: 2rem;
  margin-bottom: 2rem;
  text-align: center;
  color: #ccc;

  @media (width <768px) {
    display: none;
  }
}

/* Main puzzle styles */

.cryptogram-words {
  font-family: var(--font-family-mono);
  font-size: 2rem;

  @media (width < 640px) {
    font-size: 1.5rem;
  }

  display: flex;
  flex-wrap: wrap;

  gap: 0.66ch calc(1ch + 4px);
}

.word {
  display: flex;

  /*
  Avoid overflow when the viewport is *really* small.
  This doesn't cause wrapping if there's still space for the parent
  flexbox (.cryptogram-words) to wrap.
  */
  flex-wrap: wrap;

  align-items: center;

}

.char {
  position: relative;

  width: calc(1ch + 6px);
  padding-inline: 3px;
  padding-block: 2px;
  line-height: 85%;
  text-transform: uppercase;

  border: none;
  user-select: none;
  -webkit-user-select: none;
  cursor: default;
  caret-color: transparent;

  transition:
    filter 0.1s,
    background 0.2s,
    color 0.2s;

  &:where(:not(.char-punctuation)) {
    background: #f0f0f0;
  }

  &.char-filled {
    background: rgb(103, 108, 148);
    color: white;
  }

  &::selection {
    background: transparent;
  }

  &::placeholder {
    color: #a7a7a7;
  }

  &:focus {
    outline: 2px solid black;
  }

  &:hover {
    filter: brightness(0.85);
  }
}

.char.char-wrong {
  background: rgb(185, 34, 29);

  &:focus {
    outline: 2px solid rgb(59, 0, 0);
  }

  z-index: 3;
}

.char.char:focus {
  z-index: 4;
}